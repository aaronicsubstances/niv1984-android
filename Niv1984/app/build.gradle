apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def defaultPropertiesFile = project.file("app.properties")

def debugProperties = new Properties()
debugProperties.load(new FileInputStream(defaultPropertiesFile))
def debugPropertiesFile = project.file("app-debug.properties")
if (debugPropertiesFile.exists()) {
    debugProperties.load(new FileInputStream(debugPropertiesFile))
}

def releaseProperties = new Properties()
releaseProperties.load(new FileInputStream(defaultPropertiesFile))
def releasePropertiesFile = project.file("app-release.properties")
if (releasePropertiesFile.exists()) {
    releaseProperties.load(new FileInputStream(releasePropertiesFile))
}

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.aaronicsubstances.niv1984"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 201
        versionName "2.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'

            buildConfigField("String", "API_BASE_URL", "\"${debugProperties['apiBaseUrl']}\"")
            buildConfigField("String", "API_CRED", "\"${debugProperties['apiCred']}\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            buildConfigField("String", "API_BASE_URL", "\"${releaseProperties['apiBaseUrl']}\"")
            buildConfigField("String", "API_CRED", "\"${releaseProperties['apiCred']}\"")
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.1'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    testCompile 'junit:junit:4.12'
}
