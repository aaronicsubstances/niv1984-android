plugins {
    id 'com.android.application'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def defaultPropertiesFile = project.file("app.properties")

def debugProperties = new Properties()
debugProperties.load(new FileInputStream(defaultPropertiesFile))
def debugPropertiesFile = project.file("app-debug.properties")
if (debugPropertiesFile.exists()) {
    debugProperties.load(new FileInputStream(debugPropertiesFile))
}

def releaseProperties = new Properties()
releaseProperties.load(new FileInputStream(defaultPropertiesFile))
def releasePropertiesFile = project.file("app-release.properties")
if (releasePropertiesFile.exists()) {
    releaseProperties.load(new FileInputStream(releasePropertiesFile))
}

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    namespace "com.aaronicsubstances.niv1984"
    compileSdk 34

    defaultConfig {
        applicationId "com.aaronicsubstances.niv1984"
        minSdk 21
        targetSdk 34
        versionCode 209
        versionName "2.0.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'

            buildConfigField("String", "API_BASE_URL", "\"${debugProperties['apiBaseUrl']}\"")
            buildConfigField("String", "API_CRED", "\"${debugProperties['apiCred']}\"")
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            buildConfigField("String", "API_BASE_URL", "\"${releaseProperties['apiBaseUrl']}\"")
            buildConfigField("String", "API_CRED", "\"${releaseProperties['apiCred']}\"")
        }
    }
    buildFeatures {
        buildConfig true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'com.github.tony19:logback-android:3.0.0'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    testImplementation 'junit:junit:4.13.2'
}
